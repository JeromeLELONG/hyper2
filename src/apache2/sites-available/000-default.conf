<VirtualHost *:80>
	# The ServerName directive sets the request scheme, hostname and port that
	# the server uses to identify itself. This is used when creating
	# redirection URLs. In the context of virtual hosts, the ServerName
	# specifies what hostname must appear in the request's Host: header to
	# match this virtual host. For the default virtual host (this file) this
	# value is not decisive as it is used as a last resort host regardless.
	# However, you must set it for any further virtual host explicitly.
	#ServerName www.example.com



	ServerAdmin webmaster@localhost
	DocumentRoot /var/www/html/applications/hyper/public/
	SetEnv APPLICATION_ENV "development"
RequestHeader unset Accept-Encoding

    ProxyRequests Off
    ProxyVia Off
    ProxyPreserveHost On
    ProxyStatus On

RewriteEngine On
   RewriteCond %{HTTP:Upgrade} =websocket [NC]
   RewriteRule /(.*)           ws://node:4200/$1 [P,L]

 
  <Location /sockjs-node/info>

	
       ProxyPass http://node:4200/sockjs-node/  

   </Location>

    ProxyPass           /app    http://node:4200/app/

# <LocationMatch "\/sockjs-node\/.*\.(websocket)">
#   ProxyPassMatch http://localhost/aaa/$1
#   ProxyPassReverse    ws://node:4200/
# </LocationMatch>

	# ProxyHTMLEnable On
	# ProxyHTMLURLMap http://localhost:4200 http://localhost
 
#   <Location /sockjs-node/info>
    #       RewriteEngine On
    #   RewriteCond %{HTTP:Upgrade} =websocket [NC]
    #   RewriteRule /(.*)           ws://node:4200/$1 [P,L]
    #   RewriteCond %{HTTP:Upgrade} !=websocket [NC]
    #   RewriteRule /(.*)           http://node:4200/$1 [P,L]

    #    ProxyPass http://node:4200/sockjs-node/  
    	# ProxyPassReverse "http://node:4200/"
#    </Location>


#  ProxyPass /login !
#  ProxyPass /api !
#  ProxyPass /authenticate !
#  ProxyPass /logout !
#  ProxyPass /login//authenticate !
#  ProxyPass /img/ !
#  ProxyPass /js/ !
#  ProxyPass /css/ !
#  ProxyPassMatch .*\.php$ !
	#ProxyPass           /sockjs-node    http://node:4200/sockjs-node
    # ProxyPass           /    http://node:4200/
    # ProxyPassReverse    /    http://locahost:4200/
#	ProxyPassReverse    /    http://localhost:4200/

#RewriteEngine On
#RewriteCond %{REQUEST_URI} ^/$
#RewriteRule ^(.*)$ http://localhost$1/ [R=301,L]

#  AddOutputFilterByType SUBSTITUTE application/javascript
#  AddOutputFilterByType SUBSTITUTE application/json
#   Substitute "s|localhost:4200|localhost|ni" 
# <Location "/login/">
#       RewriteEngine On
#   RewriteCond %{HTTP:Upgrade} =websocket [NC]
#   RewriteRule /(.*)           ws://localhost/$1 [P,L]
#   RewriteCond %{HTTP:Upgrade} !=websocket [NC]
#   RewriteRule /(.*)           http://localhost/$1 [P,L]

#     ProxyPass "http://localhost/"  
#  	ProxyPassReverse "http://localhost/"
# </Location>

# <Location "/authenticate/">
#       RewriteEngine On
#   RewriteCond %{HTTP:Upgrade} =websocket [NC]
#   RewriteRule /(.*)           ws://localhost/$1 [P,L]
#   RewriteCond %{HTTP:Upgrade} !=websocket [NC]
#   RewriteRule /(.*)           http://localhost/$1 [P,L]

#     ProxyPass "http://localhost/"  
#  	ProxyPassReverse "http://localhost/"
# </Location>

# <Location "/api/">
#       RewriteEngine On
#   RewriteCond %{HTTP:Upgrade} =websocket [NC]
#   RewriteRule /(.*)           ws://localhost/$1 [P,L]
#   RewriteCond %{HTTP:Upgrade} !=websocket [NC]
#   RewriteRule /(.*)           http://localhost/$1 [P,L]

#     ProxyPass "http://localhost/"  
#  	ProxyPassReverse "http://localhost/"
# </Location>
# # 
# ProxyPreserveHost On
# ProxyPass /login !
# ProxyPass /api !
# ProxyPass /authenticate !
# ProxyPass /logout !
# ProxyPass /login//authenticate !
# ProxyPass /img/ !
# ProxyPass /js/ !
# ProxyPass /css/ !
# ProxyPassMatch .*\.php$ !

# ProxyPassReverse /login !
# ProxyPassReverse  /api !
# ProxyPassReverse  /authenticate !
# ProxyPassReverse  /logout !
# ProxyPassReverse  /login//authenticate !
# ProxyPassReverse  /img/ !
# ProxyPassReverse  /js/ !
# ProxyPassReverse  /css/ !
# ProxyPassReverse  .*\.php$ !

#    RewriteEngine On
# #   RewriteCond  %{SERVER_PORT} ^4200$
#    RewriteCond %{HTTP:Upgrade} =websocket [NC]
#    RewriteRule /(.*)           ws://node:4200/$1 [P,L]
# #   RewriteCond %{HTTP:Upgrade} !=websocket [NC]
# #   RewriteCond  %{SERVER_PORT} ^4200$

#   #RewriteRule /(.*)           http://node:4200/$1 [P,L]

# ProxyPass / http://node:4200/
# ProxyPassReverse "/" "http://node:4200/"
# ProxyPassReverse "/" "http://localhost:4200/"
  

#     ProxyPass "/" "http://localhost:4200/" 
# 	ProxyPassReverse "/" "http://node:4200/"
	# Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
	# error, crit, alert, emerg.
	# It is also possible to configure the loglevel for particular
	# modules, e.g.
	#LogLevel info ssl:warn

	ErrorLog ${APACHE_LOG_DIR}/error.log
	CustomLog ${APACHE_LOG_DIR}/access.log combined

	# For most configuration files from conf-available/, which are
	# enabled or disabled at a global level, it is possible to
	# include a line for only one particular virtual host. For example the
	# following line enables the CGI configuration for this host only
	# after it has been globally disabled with "a2disconf".
	#Include conf-available/serve-cgi-bin.conf
</VirtualHost>

# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
